// Generated from ../../grammar/SFX.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class SFXLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly GLSL = 8;
	public static readonly SFX_FILE = 9;
	public static readonly SFX_INCLUDE = 10;
	public static readonly SFX_TECHNIQUE = 11;
	public static readonly SFX_LBRACE = 12;
	public static readonly SFX_RBRACE = 13;
	public static readonly SFX_VS = 14;
	public static readonly SFX_PS = 15;
	public static readonly SFX_PIPELINE = 16;
	public static readonly SFX_PROPERTY = 17;
	public static readonly SFX_PIPE_PROP = 18;
	public static readonly SFX_SEMANTIC_TYPE = 19;
	public static readonly SFX_EXT = 20;
	public static readonly SFX_SEMANTIC = 21;
	public static readonly SFX_IDENTIFIER = 22;
	public static readonly COMMENT = 23;
	public static readonly WS = 24;
	public static readonly EOL = 25;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "SFX_GLSL_CODE", 
		"GLSL", "SFX_FILE", "SFX_INCLUDE", "SFX_TECHNIQUE", "SFX_LBRACE", "SFX_RBRACE", 
		"SFX_VS", "SFX_PS", "SFX_PIPELINE", "SFX_PROPERTY", "SFX_PIPE_PROP", "SFX_SEMANTIC_TYPE", 
		"SFX_EXT", "DIGIT", "SFX_SEMANTIC", "SFX_IDENTIFIER", "COMMENT", "WS", 
		"EOL",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'/'", "'\"'", "'<'", "'>'", "':'", "';'", "','", undefined, 
		"'#file'", "'#include'", "'technique'", "'{'", "'}'", "'vs'", "'ps'", 
		"'pipeline'", "'property'", undefined, undefined, "'.sfx'", undefined, 
		undefined, undefined, undefined, "'\n'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "GLSL", "SFX_FILE", "SFX_INCLUDE", "SFX_TECHNIQUE", "SFX_LBRACE", 
		"SFX_RBRACE", "SFX_VS", "SFX_PS", "SFX_PIPELINE", "SFX_PROPERTY", "SFX_PIPE_PROP", 
		"SFX_SEMANTIC_TYPE", "SFX_EXT", "SFX_SEMANTIC", "SFX_IDENTIFIER", "COMMENT", 
		"WS", "EOL",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(SFXLexer._LITERAL_NAMES, SFXLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return SFXLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	   ignoreNewLine:boolean = true;


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(SFXLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "SFX.g4"; }

	// @Override
	public get ruleNames(): string[] { return SFXLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return SFXLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return SFXLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return SFXLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 25:
			this.WS_action(_localctx, actionIndex);
			break;

		case 26:
			this.EOL_action(_localctx, actionIndex);
			break;
		}
	}
	private WS_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			 this.skip(); 
			break;
		}
	}
	private EOL_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			 if(this.ignoreNewLine) { this.skip(); } this.ignoreNewLine = true; 
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1B\u011D\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x07\tI\n\t\f\t\x0E\tL\v" +
		"\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11" +
		"\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x05\x14\xA8\n\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x05" +
		"\x15\xCB\n\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x05\x18" +
		"\xEE\n\x18\x03\x19\x03\x19\x03\x19\x07\x19\xF3\n\x19\f\x19\x0E\x19\xF6" +
		"\v\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x07\x1A\xFC\n\x1A\f\x1A\x0E\x1A" +
		"\xFF\v\x1A\x03\x1A\x05\x1A\u0102\n\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x07\x1A\u0109\n\x1A\f\x1A\x0E\x1A\u010C\v\x1A\x03\x1A\x03\x1A" +
		"\x05\x1A\u0110\n\x1A\x03\x1A\x03\x1A\x03\x1B\x06\x1B\u0115\n\x1B\r\x1B" +
		"\x0E\x1B\u0116\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x04J\u010A\x02" +
		"\x02\x1D\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02" +
		"\b\x0F\x02\t\x11\x02\x02\x13\x02\n\x15\x02\v\x17\x02\f\x19\x02\r\x1B\x02" +
		"\x0E\x1D\x02\x0F\x1F\x02\x10!\x02\x11#\x02\x12%\x02\x13\'\x02\x14)\x02" +
		"\x15+\x02\x16-\x02\x02/\x02\x171\x02\x183\x02\x195\x02\x1A7\x02\x1B\x03" +
		"\x02\x05\x05\x02C\\aac|\x04\x02\f\f\x0F\x0F\x05\x02\v\v\x0E\x0F\"\"\x02" +
		"\u012C\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02" +
		"\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02" +
		"\x02\x02\x0F\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
		"\x039\x03\x02\x02\x02\x05;\x03\x02\x02\x02\x07=\x03\x02\x02\x02\t?\x03" +
		"\x02\x02\x02\vA\x03\x02\x02\x02\rC\x03\x02\x02\x02\x0FE\x03\x02\x02\x02" +
		"\x11J\x03\x02\x02\x02\x13M\x03\x02\x02\x02\x15Y\x03\x02\x02\x02\x17_\x03" +
		"\x02\x02\x02\x19h\x03\x02\x02\x02\x1Br\x03\x02\x02\x02\x1Dt\x03\x02\x02" +
		"\x02\x1Fv\x03\x02\x02\x02!y\x03\x02\x02\x02#|\x03\x02\x02\x02%\x85\x03" +
		"\x02\x02\x02\'\xA7\x03\x02\x02\x02)\xCA\x03\x02\x02\x02+\xCC\x03\x02\x02" +
		"\x02-\xD1\x03\x02\x02\x02/\xED\x03\x02\x02\x021\xEF\x03\x02\x02\x023\u010F" +
		"\x03\x02\x02\x025\u0114\x03\x02\x02\x027\u011A\x03\x02\x02\x029:\x071" +
		"\x02\x02:\x04\x03\x02\x02\x02;<\x07$\x02\x02<\x06\x03\x02\x02\x02=>\x07" +
		">\x02\x02>\b\x03\x02\x02\x02?@\x07@\x02\x02@\n\x03\x02\x02\x02AB\x07<" +
		"\x02\x02B\f\x03\x02\x02\x02CD\x07=\x02\x02D\x0E\x03\x02\x02\x02EF\x07" +
		".\x02\x02F\x10\x03\x02\x02\x02GI\v\x02\x02\x02HG\x03\x02\x02\x02IL\x03" +
		"\x02\x02\x02JK\x03\x02\x02\x02JH\x03\x02\x02\x02K\x12\x03\x02\x02\x02" +
		"LJ\x03\x02\x02\x02MN\x07%\x02\x02NO\x07I\x02\x02OP\x07N\x02\x02PQ\x07" +
		"U\x02\x02QR\x07N\x02\x02RS\x03\x02\x02\x02ST\x05\x11\t\x02TU\x07%\x02" +
		"\x02UV\x07G\x02\x02VW\x07P\x02\x02WX\x07F\x02\x02X\x14\x03\x02\x02\x02" +
		"YZ\x07%\x02\x02Z[\x07h\x02\x02[\\\x07k\x02\x02\\]\x07n\x02\x02]^\x07g" +
		"\x02\x02^\x16\x03\x02\x02\x02_`\x07%\x02\x02`a\x07k\x02\x02ab\x07p\x02" +
		"\x02bc\x07e\x02\x02cd\x07n\x02\x02de\x07w\x02\x02ef\x07f\x02\x02fg\x07" +
		"g\x02\x02g\x18\x03\x02\x02\x02hi\x07v\x02\x02ij\x07g\x02\x02jk\x07e\x02" +
		"\x02kl\x07j\x02\x02lm\x07p\x02\x02mn\x07k\x02\x02no\x07s\x02\x02op\x07" +
		"w\x02\x02pq\x07g\x02\x02q\x1A\x03\x02\x02\x02rs\x07}\x02\x02s\x1C\x03" +
		"\x02\x02\x02tu\x07\x7F\x02\x02u\x1E\x03\x02\x02\x02vw\x07x\x02\x02wx\x07" +
		"u\x02\x02x \x03\x02\x02\x02yz\x07r\x02\x02z{\x07u\x02\x02{\"\x03\x02\x02" +
		"\x02|}\x07r\x02\x02}~\x07k\x02\x02~\x7F\x07r\x02\x02\x7F\x80\x07g\x02" +
		"\x02\x80\x81\x07n\x02\x02\x81\x82\x07k\x02\x02\x82\x83\x07p\x02\x02\x83" +
		"\x84\x07g\x02\x02\x84$\x03\x02\x02\x02\x85\x86\x07r\x02\x02\x86\x87\x07" +
		"t\x02\x02\x87\x88\x07q\x02\x02\x88\x89\x07r\x02\x02\x89\x8A\x07g\x02\x02" +
		"\x8A\x8B\x07t\x02\x02\x8B\x8C\x07v\x02\x02\x8C\x8D\x07{\x02\x02\x8D&\x03" +
		"\x02\x02\x02\x8E\x8F\x07s\x02\x02\x8F\x90\x07w\x02\x02\x90\x91\x07g\x02" +
		"\x02\x91\x92\x07w\x02\x02\x92\xA8\x07g\x02\x02\x93\x94\x07|\x02\x02\x94" +
		"\x95\x07y\x02\x02\x95\x96\x07t\x02\x02\x96\x97\x07k\x02\x02\x97\x98\x07" +
		"v\x02\x02\x98\xA8\x07g\x02\x02\x99\x9A\x07|\x02\x02\x9A\x9B\x07v\x02\x02" +
		"\x9B\x9C\x07g\x02\x02\x9C\x9D\x07u\x02\x02\x9D\xA8\x07v\x02\x02\x9E\x9F" +
		"\x07d\x02\x02\x9F\xA0\x07n\x02\x02\xA0\xA1\x07g\x02\x02\xA1\xA2\x07p\x02" +
		"\x02\xA2\xA8\x07f\x02\x02\xA3\xA4\x07e\x02\x02\xA4\xA5\x07w\x02\x02\xA5" +
		"\xA6\x07n\x02\x02\xA6\xA8\x07n\x02\x02\xA7\x8E\x03\x02\x02\x02\xA7\x93" +
		"\x03\x02\x02\x02\xA7\x99\x03\x02\x02\x02\xA7\x9E\x03\x02\x02\x02\xA7\xA3" +
		"\x03\x02\x02\x02\xA8(\x03\x02\x02\x02\xA9\xAA\x07V\x02\x02\xAA\xAB\x07" +
		"G\x02\x02\xAB\xAC\x07Z\x02\x02\xAC\xAD\x07E\x02\x02\xAD\xAE\x07Q\x02\x02" +
		"\xAE\xAF\x07Q\x02\x02\xAF\xB0\x07T\x02\x02\xB0\xCB\x07F\x02\x02\xB1\xB2" +
		"\x07E\x02\x02\xB2\xB3\x07Q\x02\x02\xB3\xB4\x07N\x02\x02\xB4\xB5\x07Q\x02" +
		"\x02\xB5\xCB\x07T\x02\x02\xB6\xB7\x07R\x02\x02\xB7\xB8\x07Q\x02\x02\xB8" +
		"\xB9\x07U\x02\x02\xB9\xBA\x07K\x02\x02\xBA\xBB\x07V\x02\x02\xBB\xBC\x07" +
		"K\x02\x02\xBC\xBD\x07Q\x02\x02\xBD\xCB\x07P\x02\x02\xBE\xBF\x07P\x02\x02" +
		"\xBF\xC0\x07Q\x02\x02\xC0\xC1\x07T\x02\x02\xC1\xC2\x07O\x02\x02\xC2\xC3" +
		"\x07C\x02\x02\xC3\xCB\x07N\x02\x02\xC4\xC5\x07V\x02\x02\xC5\xC6\x07C\x02" +
		"\x02\xC6\xC7\x07T\x02\x02\xC7\xC8\x07I\x02\x02\xC8\xC9\x07G\x02\x02\xC9" +
		"\xCB\x07V\x02\x02\xCA\xA9\x03\x02\x02\x02\xCA\xB1\x03\x02\x02\x02\xCA" +
		"\xB6\x03\x02\x02\x02\xCA\xBE\x03\x02\x02\x02\xCA\xC4\x03\x02\x02\x02\xCB" +
		"*\x03\x02\x02\x02\xCC\xCD\x070\x02\x02\xCD\xCE\x07u\x02\x02\xCE\xCF\x07" +
		"h\x02\x02\xCF\xD0\x07z\x02\x02\xD0,\x03\x02\x02\x02\xD1\xD2\x042;\x02" +
		"\xD2.\x03\x02\x02\x02\xD3\xD4\x05)\x15\x02\xD4\xD5\x07a\x02\x02\xD5\xD6" +
		"\x05-\x17\x02\xD6\xEE\x03\x02\x02\x02\xD7\xD8\x07O\x02\x02\xD8\xD9\x07" +
		"C\x02\x02\xD9\xDA\x07K\x02\x02\xDA\xDB\x07P\x02\x02\xDB\xDC\x07a\x02\x02" +
		"\xDC\xDD\x07V\x02\x02\xDD\xDE\x07G\x02\x02\xDE\xDF\x07Z\x02\x02\xDF\xE0" +
		"\x07V\x02\x02\xE0\xE1\x07W\x02\x02\xE1\xE2\x07T\x02\x02\xE2\xEE\x07G\x02" +
		"\x02\xE3\xE4\x07O\x02\x02\xE4\xE5\x07C\x02\x02\xE5\xE6\x07K\x02\x02\xE6" +
		"\xE7\x07P\x02\x02\xE7\xE8\x07a\x02\x02\xE8\xE9\x07E\x02\x02\xE9\xEA\x07" +
		"Q\x02\x02\xEA\xEB\x07N\x02\x02\xEB\xEC\x07Q\x02\x02\xEC\xEE\x07T\x02\x02" +
		"\xED\xD3\x03\x02\x02\x02\xED\xD7\x03\x02\x02\x02\xED\xE3\x03\x02\x02\x02" +
		"\xEE0\x03\x02\x02\x02\xEF\xF4\t\x02\x02\x02\xF0\xF3\x05-\x17\x02\xF1\xF3" +
		"\t\x02\x02\x02\xF2\xF0\x03\x02\x02\x02\xF2\xF1\x03\x02\x02\x02\xF3\xF6" +
		"\x03\x02\x02\x02\xF4\xF2\x03\x02\x02\x02\xF4\xF5\x03\x02\x02\x02\xF52" +
		"\x03\x02\x02\x02\xF6\xF4\x03\x02\x02\x02\xF7\xF8\x071\x02\x02\xF8\xF9" +
		"\x071\x02\x02\xF9\xFD\x03\x02\x02\x02\xFA\xFC\n\x03\x02\x02\xFB\xFA\x03" +
		"\x02\x02\x02\xFC\xFF\x03\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFD\xFE\x03" +
		"\x02\x02\x02\xFE\u0101\x03\x02\x02\x02\xFF\xFD\x03\x02\x02\x02\u0100\u0102" +
		"\x07\x0F\x02\x02\u0101\u0100\x03\x02\x02\x02\u0101\u0102\x03\x02\x02\x02" +
		"\u0102\u0103\x03\x02\x02\x02\u0103\u0110\x07\f\x02\x02\u0104\u0105\x07" +
		"1\x02\x02\u0105\u0106\x07,\x02\x02\u0106\u010A\x03\x02\x02\x02\u0107\u0109" +
		"\v\x02\x02\x02\u0108\u0107\x03\x02\x02\x02\u0109\u010C\x03\x02\x02\x02" +
		"\u010A\u010B\x03\x02\x02\x02\u010A\u0108\x03\x02\x02\x02\u010B\u010D\x03" +
		"\x02\x02\x02\u010C\u010A\x03\x02\x02\x02\u010D\u010E\x07,\x02\x02\u010E" +
		"\u0110\x071\x02\x02\u010F\xF7\x03\x02\x02\x02\u010F\u0104\x03\x02\x02" +
		"\x02\u0110\u0111\x03\x02\x02\x02\u0111\u0112\b\x1A\x02\x02\u01124\x03" +
		"\x02\x02\x02\u0113\u0115\t\x04\x02\x02\u0114\u0113\x03\x02\x02\x02\u0115" +
		"\u0116\x03\x02\x02\x02\u0116\u0114\x03\x02\x02\x02\u0116\u0117\x03\x02" +
		"\x02\x02\u0117\u0118\x03\x02\x02\x02\u0118\u0119\b\x1B\x03\x02\u01196" +
		"\x03\x02\x02\x02\u011A\u011B\x07\f\x02\x02\u011B\u011C\b\x1C\x04\x02\u011C" +
		"8\x03\x02\x02\x02\x0E\x02J\xA7\xCA\xED\xF2\xF4\xFD\u0101\u010A\u010F\u0116" +
		"\x05\b\x02\x02\x03\x1B\x02\x03\x1C\x03";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SFXLexer.__ATN) {
			SFXLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(SFXLexer._serializedATN));
		}

		return SFXLexer.__ATN;
	}

}

